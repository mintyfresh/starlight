<%= form_with(model: @event, class: 'mb-5') do |form| %> 
  <%= form.group(class: 'mb-3') do %>
    <%= form.label(:name) %>
    <%= form.text_field(:name) %>
    <%= form.field_errors(:name) %>
  <% end %>
  <%= form.group(class: 'mb-3') do %>
    <%= form.label(:location) %>
    <%= form.text_field(:location) %>
    <%= form.field_errors(:location) %>
  <% end %>
  <%= form.group(class: 'mb-3') do %>
    <%= form.label(:description) %>
    <%= form.text_area :description %>
    <%= form.field_errors(:description) %>
  <% end %>
  <%= form.group(class: 'mb-3') do %>
    <%= form.label(:time_zone) %>
    <%= form.select(:time_zone, options_from_collection_for_select(TZInfo::Timezone.all, :identifier, :friendly_identifier, @event.time_zone)) %>
    <%= form.field_errors(:time_zone) %>
  <% end %>
  <div class="row row-cols-md-2">
    <%= form.group(class: 'col mb-3') do %>
      <%= form.label(:starts_at) %>
      <%= form.datetime_local_field(:starts_at) %>
      <%= form.field_errors(:starts_at) %>
    <% end %>
    <%= form.group(class: 'col mb-3') do %>
      <%= form.label(:ends_at) %>
      <%= form.datetime_local_field(:ends_at) %>
      <%= form.field_errors(:ends_at) %>
    <% end %>
    <%= form.group(class: 'col mb-3') do %>
      <%= form.label(:registration_starts_at) %>
      <%= form.datetime_local_field(:registration_starts_at) %>
      <%= form.field_errors(:registration_starts_at) %>
    <% end %>
    <%= form.group(class: 'col mb-3') do %>
      <%= form.label(:registration_ends_at) %>
      <%= form.datetime_local_field(:registration_ends_at) %>
      <%= form.field_errors(:registration_ends_at) %>
    <% end %>
  </div>
  <%= form.group(class: 'mb-3') do %>
    <%= form.label(:registrations_limit) %>
    <%= form.number_field(:registrations_limit) %>
    <%= form.field_errors(:registrations_limit) %>
  <% end %>
  <%= accordion(class: 'mb-3', always_open: true) do |extensions| %>
    <%= extensions.with_item(expanded: form.object.announcement_config&.persisted?) do |item| %>
      <% item.with_header { 'Announcement configuration' } %>
      <% item.with_body do %>
        <%= form.fields_for(:announcement_config, form.object.announcement_config || Event::AnnouncementConfig.new) do |announcement_config_form| %>
          <%= form.group do %>
            <%= announcement_config_form.label(:discord_channel_id) %>
            <%= announcement_config_form.select(
              :discord_channel_id, channel_options,
              { include_blank: true },
              disabled: channel_options.none?,
              readonly: announcement_config_form.object.discord_message_id.present?
            ) %>
            <%= announcement_config_form.field_errors(:discord_channel_id) %>
          <% end %>
          <%= announcement_config_form.base_errors %>
        <% end %>
      <% end %>
    <% end %>
    <% extensions.with_item(expanded: form.object.role_config&.persisted?) do |item| %>
      <% item.with_header { 'Discord role configuration' } %>
      <% item.with_body do %>
        <%= form.fields_for(:role_config, form.object.role_config || Event::RoleConfig.new) do |role_config_form| %>
          <div class="row">
            <%= role_config_form.group(class: 'col mb-3') do %>
              <%= role_config_form.label(:name) %>
              <%= role_config_form.text_field(:name) %>
              <%= role_config_form.field_errors(:name) %>
            <% end %>
            <%= role_config_form.group(class: 'col-auto mb-3') do %>
              <%= role_config_form.label(:colour) %>
              <%= role_config_form.colour_field(:colour, value: role_config_form.object.colour_as_hex) %>
              <%= role_config_form.field_errors(:colour) %>
            <% end %>
          </div>
          <%= role_config_form.group(class: 'mb-3') do %>
            <%= role_config_form.switch(:hoist, has_help_text: true) %>
            <%= role_config_form.help_text(:hoist) do %>
              Discord internally refers to this toggle as "hoist".
            <% end %>
          <% end %>
          <%= role_config_form.group(class: 'mb-3') do %>
            <%= role_config_form.switch(:mentionable, has_help_text: true) %>
            <%= role_config_form.help_text(:mentionable) do %>
              When enabled, users will be able to @mention this role in chat.
            <% end %>
          <% end %>
          <%= role_config_form.group do %>
            <%= role_config_form.label(:permissions) %>
            <%= role_config_form.text_field(:permissions, has_help_text: true) %>
            <%= role_config_form.field_errors(:permissions) %>
            <%= role_config_form.help_text(:permissions) do %>
              <strong class="text-danger">Beware!</strong> Unless you really know what you are doing, you should leave the permissions field well enough alone.
              Here be dragons and other dangerous things. Madness and suffering and pain await those who venture to carelessly put values into here.
              Consider yourself warned.
            <% end %>
          <% end %>
          <%= role_config_form.base_errors %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
  <%= form.base_errors %>
  <%= form.group do %>
    <%= form.submit %>
  <% end %>
<% end %>
